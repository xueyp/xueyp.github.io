---
layout: post
title:  "读书笔记-简约至上：交互式设计四策略"
categories: 读书笔记
tags: 读书笔记
author: xueyp
description:
---

人们喜欢简单、值得依赖、适应性强的产品。

在做技术产品设计时，至少有3个角度：管理人员、工程师和用户。

简单并不意味着最少化。朴素的设计仍然具有自身的特征和个性。简单的特征和个性应该源自你使用的方法、所要表现的产品，以及用户执行的任务。

大多数公司都是按照一个方程式运作的。例如：

> （汽车销售量）×（汽车单价）－（成本）＝（利润）

要搞清楚简化用户体验将会如何影响方程式中的每一项。简化产品后公司能卖出更多车（例如，更符合用户的需要），还是能够提高价格（因为能给人更先进的感觉），还是能够降低成本（因为零部件采购价格更便宜）？然后，还要将这些改变排出先后次序。比较好的做法就是对每项改变的重要性和可行性做出评估。如果问别人，他们会说什么都重要，一切皆可行。为此，最好让他们将重要性和可行性分出几个固定的档次。

![png]({{"/assets/images/2022/20220127_01.jpg"| absolute_url }})

图中右上角区域的改变最重要、最可行，因此也是你应该立即着手实施的。如果你能做出这个评估，就能为简化找到充足的理由。

## 明确认识
### 先理解用户，再思考合适的设计
描述要点的两种方式：
- 适用于小的设计：简单而迅速的方式是用一句话把它写出来，包括我要设计什么、要遵循哪几条设计规则，尽量使用最简单的术语
- 适用于设计大型项目：描述我希望用户拥有什么体验。具体一点儿说，就是描述用户的使用情景，以及我的设计怎么满足用户在该情景下的需求

每个设计都是**在考虑诸多限制之后**给出的方案。最好是在设计之初就搞清楚都存在哪些限制。然后才能保证自己的设计能够与用户的需求紧密贴合。

- 软件使用环境是观察用户的最佳地点
- 设计必须适应用户使用中受到的各种干扰
- 三种用户：专家型、随意型、主流用户（使用产品的目的是完成某项任务，占绝对主体地位）
- 忽略专家型用户，针对主流用户设计

| 主流用户 | 专家 |
| ----- | ----- |
| 最感兴趣的是立即把工作做完 | 喜欢首先设定自己的偏好 |
| 认为容易操控最有价值 | 在乎操控得是不是很精确 |
| 想得到靠谱的结果 | 希望看到完美的结果 |
| 害怕弄坏什么 | 有拆解一切刨根问底的冲动 |
| 觉得只要合适就行了 | 想着必须精确匹配 |
| 想看到示例和故事 | 想看的则是原理 |

- 关注情感需求
  - 使用中的低压力，轻松自在
  - 让用户感到自己在掌控一切
- 用户在做什么？
  - 详细列出用户体验过程中的任何一个步骤
  - 关注主要的行动，并从用户的视角把它描述出来
  - 故事可以让读者更容易明白什么重要和为什么重要：展示而不是讲故事，故事的情节要简短，不要编造故事
- 把你的设计放在一个情节中，情节中有可信的角色，发生在可信的环境中
  - 可信的环境：故事中的时间和地点
  - 可信的角色：谁，为什么
  - 流畅的情节：什么，怎么样
- 设计简单的体验意味着追求极端的可用性

| 常规的可用性目标 | 简单性的目标 |
| ----- | ----- |
| 特殊人群可以使用 | 任何人都可以使用 |
| 容易使用 | 毫不费力地使用 |
| 快速响应 | 瞬间响应 |
| 快速理解 | 一目了然 |
| 工作可靠 | 始终工作 |
| 直观的错误消息 | 不出错 |
| 完整的信息 | 恰好够用的信息 |
| 用户测试时工作 | 在混乱无序的环境中工作 |

- 尽可能用最简单的词汇描述设计想法
- 评估故事，并追问什么因素对用户的行为影响最大
- 不要匆忙着手设计，理解核心问题需要时间
- 在团队分享认知后，就可以开始设计了

## 简约四策略
删除不必要的、组织要提供的、隐藏非核心的
### 删除

- 删除杂乱的特性，让设计师专注于把有限的重要问题解决好，让用户专注于完成自己的目标
  - 与新增功能相比，客户更关注基本功能的改进
  - 列出最基本、最核心、最有价值的功能和内容：关系到用户的日常体验，消除用户挫折感的功能
  - 避免错删，如删除难以实现的功能
  - 砍掉残缺功能
  - 不猜测用户需求，而要真正搞清楚这个功能对用户是否重要
  - 倾听客户意见但不盲从，慎重增加新功能
- 如果一个小的变化导致了复杂的流程，就应该退一步去寻找更好的解决方案
  - 从问题的解决方案考虑问题，而不是流程
  - 避免创造更多功能处理各种异常情况、问题和细节
- 产品功能过多，有可能降低主流用户的满意度
  - 未试用用户更可能选择功能多的产品
  - 有机会试用的用户更可能选择可用性更高的产品
  - 长远看，增加功能有害无益
  - 专注于目标客户的核心任务
  - 专注于寻找能够完全满足优先级最高的用户需求的解决方案。找到之后再考虑满足用户的其他目标
  - 不要以功能的多寡来认定产品的价值，应该看产品能否满足用户最高优先级的目标
- 去掉分散注意力的视觉元素，会让用户感觉速度更快，更有安全感
  - 删除干扰因素，让用户注意力保持集中
  - 为用户提供有限数量的决策选择
  - 选择聪明的默认值可以减少用户的选择，节省用户时间和精力
  - 主流用户不喜欢为设置选项和首选项费心劳神
- 消除错误来源是简化体验的一个重要思路
- 删除视觉混乱的元素意味着人们必须处理的信息变少了，能够把注意力集中到真正重要的内容上
  - 使用空白或轻微的背景色划分页面
  - 控制信息的层次：最好不超过三层：标题、子标题和正文
- 删减文字
  - 删除引见性文字
  - 删除不必要的说明
  - 删除繁琐的解释
  - 使用描述性链接
- 精减句子
  - 不使用介词（“对于/根据/为了/基干/通过/关于”）。这些词会弱化句子的谓语，因此要尽量省略
  - 不使用is的动词形式（“正在消耗时间”），尽你所能使用其他表述方式（“花时间”）
  - 把被动句式（“时间是被这个项目所需要的”）转换为主动句式（“这个项自需要时间”）
  - 删掉索然无味的开头（“大家都很容易看到这一点，……”），开门见山
  - 减少废话。在表达相同意思的前提下，用“每天”代替“在每天的基础上”
- 避免删减过多
  - 关键要素不能删除
  - 不能让人失去控制感
- 删除混乱的要素让用户聚集于真正重要的功能
  - “删除”策略的核心就是干掉那些分散注意力的因素，聚焦于项目
  - 聚焦于对用户有价值的功能。这意味着专注干那些承载用户核心体验的功能，也意味着交付的功能必须能够消除用户的挫折感，能够消除他们的焦虑
  - 聚焦于可用资源，通过删除残缺的功能、不切题的元素和花里胡哨的东西为用户提供价值
  - 聚焦于达成用户的目标。纠结于流程会陷入细节的泥潭而无法自拔
  - 删除那些干扰性的、增加用户负担的“减速带”：错误消息、不知所云的文字、不必要的选项和造成视觉混乱的元素
  - 不可避免法律要求删减内容
  - 不能脱离环境删除某些功能

### 组织
如果你想通过组织的方式来简化设计，要记住最重要的一点是只强调一两个最重要的主题。随随便便地组织不会让用户的注意力集中，只能让他们眼花缭乱。

- 分块
- 围绕行为进行组织
  - 用户行动步骤：先做什么后做什么
  - 画出用户的行为有助于理解如何组织你的软件产品
- 是非分明的分类标准
- 按照字母表与格式分类看似简单，却经常不可行
- 无论是设计还是使用，搜索都比浏览困难得多
  - 搜索功能通常不是用户的第一选择
  - 最好先对内容有效组织，再考虑如何设计搜索
- 时间线是组织活动的通用方式
- 网格布局需要清晰明了
  - 如果一个元素的重要性为1/2，那就把它的大小做成1/4
  - 利用感知分层技术，呈现复杂交错信息
  - 相对于利用颜色分层，色标需要人们花时间学习和理解，仅推荐在用户会重复使用时使用
- 不断重复使用软件的流程，发现期望路径

### 隐藏
隐藏部分功能是一种低成本的方案，但是这些功能是不常用但不能少的

使用隐藏策略必须做到以下几点：
- 隐藏一次性设计和选项
- 隐藏精确控制选项，但专家用户必须能够让这些选项始终保持可见
- 不可强迫或寄希望于主流用户使用自定义功能，不过可以给专家提供这个选项
- 巧妙地隐藏。换句话说，首先是彻底隐藏，其次是适时出现

- 自定义可能是一件耗时，令人生厌的事
  - 一般来说，不应该让用户去自定义他们的软件
  - 让用户自定义自己的用户界面是假设用户知道如何布局最有效、最局效
  - 自动定制不会让界面变得更简单，反而会把界面搞得很复杂，给用户带来极大不便
- 渐进展示
  - 主流用户使用核心功能，专家用户使用扩展图标展开更多功能
- 阶段展示
  - 向导
  - 在流程中的每一步都符合用户心理预期的情况下，阶段展示的效果最好
- 适时出现
  - 尽可能彻底地隐藏所有需要隐藏的功能
  - 只在合适的时机、合适的位置上显示相应的功能
- 提示与线索
  - 使用主流用户的语言描述
  - 为专业用户提供查阅信息的线索
- 让功能容易找到
  - 将功能点入口放在用户的关注点上
  - 保证用户在前进的过程中能够遇到提示。但，不要挡住他们的去路

### 转移
设计简单体验的一个秘密，就是把正确的功能放到正确的平台或者正确的系统组件中去。

- 在设备之间转移

| 移动平台 | 桌面平台 |
| ----- | ----- |
| 可以拍摄任何景物 | 只能拍到用户（通过网络摄像头） |
| 输入少量文本 | 输入大量文本 |
| 很难加快数据传输速度 | 能适当加快数据传输速度 |
| 显示少量信息 | 显示大量信息 |
| 保存适量信息 | 保存大量信息 |
| 随时随地使用 | 只能坐下来使用 |
| 能够精确识别位置和方向 | 只能在某种程度上标位置 |
| 通过无线网络连接到其他设备 | 通过有线和无线网络连接到其他设备 |

- 向用户转移

| 人 | 计算机 |
| ----- | ----- |
| 设定目标和制定规划 | 执行程序 |
| 估算 | 精确计算 |
| 辨别信息 | 存储和检索信息 |
| 做图表 | 复制 |
| 在包含少数项的列表中选择 | 对大型列表排序 |
| 做预算 | 度量 |
| 想象 | 交叉引用详细信息 |

- 创造开放式体验
  - 在软件设计中，让某项功能具有多种用途也是一种简化之道。至于用这项功能来做什么，就留给用户决定好了
  - 菜刀与钢琴：提供简单的工具，让用户自己定义功能，无论是专家还是新手,都感觉用起来很简单
  - 开放性界面的秘诀在于，尽量减少仅适合中级用户的“便捷”特性
- 非结构化数据不适宜完全由计算机处理
- 功能转移时，要在两个平台之间建立信任
  - 与用户构筑信任关系的唯一方式，就是让用户参与测试原型或实物模型。在能够正确地把握如何分配任务之后，让用户专注于选择和指挥，让计算机专注于存储和计算

## 其他

到了设计简单用户体验的最后，往往不是问“怎样才能把这个功能设计得更简单”，而是问“到底应该把这个复杂性放到哪里”。
- 这个任务应该是自动化的（像Flip的自动对焦功能），还是应该由用户来控制（如iPhone中通过触摸屏幕来对准相机的焦距）？
- 界面中是应该包含很多功能特定的按钮（像高保真音响），还是只放一些通用的按钮（像iPod）？
- 这个任务是应该一次完成（如登录Facebook），还是应该分几段时间来完成（像定制Tumblr博客）？
- 这个任务是应该让用户有意识地去处理（如使用屏幕上的控件来筛选搜索结果），还是应该在无意间完成（如查看伦敦地铁图中的绿色线路）？

创造简单用户体验的秘诀就在于把复杂性转移到正确的地方，让用户每时每刻都能感受到简单之美。

让软件具有可用性，意思就是绝不能超出用户的能力范围。

简单的体验应该为用户留出足够的空间，让他们能够想象到当前正在做的事情同样也是自己生活的一部分。

不要让你的设计干扰用户的思绪。简单的设计能够为用户留出足够的空间，他们会用自己的生活来填充这些空间，从而创造出更丰富、更有意义的体验。

参考
============

版权声明：本文为博主原创文章，转载请注明出处。 [旭日酒馆](https://xueyp.github.io/)

---
layout: post
title:  "读书笔记-一目了然：Web软件显性设计之路"
categories: 读书笔记
tags: 读书笔记
author: xueyp
description:
---

## 显性设计的定义

Web的三个层面：数据、界面、人

Web设计师是界面设计师、易用性专家、研究员和空想家角色的组合。

让用户能够非常直观有效地使用的产品设计的要求：

- 设计应该清晰明了
- 产品应该易于理解和学习并组织有序
- 界面元素应该直观、新颖和一致

显性设计框架：

- 了解构建什么
  - 构建什么、不构建什么和底层的基本原理组成整个软件框架的**概念基础**
- 了解什么决定卓越
  - 所有的质量因素构成了**应用基础**，有助于创建实际而积极的用户体验
- 了解实现的最佳途径
  - 实现手段构成了**交互基础**

## 遵循用户在Web上的交互方式，重点是用户的行为，而非针对某个特定用户

- 一般情况下，用户使用**还能接受**的网站或工具时，轻易不会转换
- 产品并不因为比竞争对手提供功能多就好很多，因为复杂性会带给用户混乱与挫折
- 如果软件使用和操作上过于复杂，用户就不愿意自寻烦恼

- 理解用户对所做事情的思考
  - 用户调研通常只能得到一些理论性的答案，得不到在真实场景中选择的真正答案
- 理解用户真正如何做事
  - 用户通常只使用20%的软件功能，且很少自我提升技能
  - 用户只会用一种操作模式，并且坚持
  - 用户养成了自己对软件工作原理的理解
  - 用户没有时间理解软件细节
- 找到用户真正所需
  - 找出用户**做什么，怎么做，以及稍后想做什么**
  - 切勿假设
  - 依靠调研
  - 目标导向设计
  - 为活动而设计
  - 撰写用例和特例，持续改善用例

## 只提供用户所需的功能

- 只有10%用户用或只有10%时间用的一些功能，搀杂在常用功能里面，打破了界面的简洁
- 功能越多，越会陷入技术支持、bug修复等事项，忽略了对更重要功能的重视程度
- 功能不是关键，最关键的地方才应该被关注：**每一个功能都要支持对应的活动**

- 提供杀手级功能（Killer Features)
- 软件设计应简单并满足绝大多数用户的需求：完成每项任务的路径唯一，易于学习
- 软件复杂化可能降低用户满意度
- 去掉一般性功能：**显性设计的界面聚集在最重要的事情上**
- 非必要性测试
  - 该功能具有乃助于提升用户完成某项非常重要的任务的能力吗？
  - 软件计划支持哪些活动？
  - 如果要支持这些活动，关键性的活动非常易于操作吗？
  - 把软件重新做成那样需要多长时间？
  - 60秒内快速决策
  - 少即时多：二八定律
- 界面诊断
- 一般性功能的再评估
  - 绝不在软件发布前评估
  - 在软件发布后，修复一些小Bug时评估
  - 倾听用户：着眼于呼声最高、最重要的功能

## 支持用户的心智模型

软件的实现模型只会让开发者高兴。应匹配用户的心智模型，而不是反映系统的底层细节。

消除实现模型：

- 运用隐喻
- 使用线框图
  - 需求：满足用户需求
  - 精简：尽可能地精简非核心的界面
  - 规则：让所做的和所想的保持一致
- 原型
- 易用性测试

## 帮助用户迅速入门，尽快成为中级用户

中级用户才是最庞大的使用群体。

- 向新用户提供向导功能，以便新用户快速成长为中级用户
- 欢迎界面中为用户提供引导
- 新用户引导部分应能够隐藏，避免对中级用户造成干扰
- 有效利用空白
- 指导性暗示：校验和提示等
- 选择合适的默认值
- 整合偏好：将用户最可能设定的选项统一到某个主应用软件中
- 信息设计
  - 了解型
  - 探索型
  - 不知道型
  - 重新搜寻型
- 卡片分类
- 提供帮助指导和说明信息

## 尽量避免出错，并且很容易从错误中恢复过来

解决出错最好的方式就是阻止它们的发生。

- 预防型：在错误产生前阻止它
- 检查型：检查出错误并告知用户及时更正
- 出错页面或提示信息应该能让用户继续操作，而不是提示“安全警告”
- 让用户感到聪明：软件应积极把出错转化为机遇，帮助用户回到正轨
- 设计宽容的软件

## 拥有一致的界面元素，并能平衡无规则的元素

一致性、视觉层次、结构、流程、价值和连贯性是构建良好的第一印象的关键因素。在Web的排版上，花样越少，效果越好。

- 一致性：界面要素（视觉层次、比例、对齐、排版）等在设计的一致性
- 视觉层次：内容结构视觉层次整洁简单
- 比例：某个要素与其他要素对比的尺寸或数量
- 对齐：网页上的各种元素都应该很好地对齐
- 排版：字体、字号、字色的一致
- 空间记忆
  - 用户必须知道页面上都有哪些东西 
  - 用户必须知道这些东西 分布在什么地方以及彼此之间的关系
  - 用户必须知道鼠标所在位置和与之之间的关系
  - 通过改变尺寸、颜色等突出需要用户特别关注的某个元素

## 精简与优化：将混乱降到最低限度

不断地改进精简是通往简洁的唯一途径。

简洁的用户体验：

- 专注
- 仅通过简洁清晰的用户界面提供最需要的功能
- 轻文字描述，重当前任务

消除混乱：

- 降低图形的比例
  - logo不需要太大
  - 保持结构化图形层的最小化
- 减少抄袭
- 设计空白空间
- 清理任务流程（**精简和优化最主要的部分**）

5S法：

- 分类（Seiri):挑选功能、界面的元素，使一个页面最小化到最需的部分
- 理顺(Seiton)：最有效和最通畅地对事情排序
- 擦亮(Seiso)：保持清爽、整齐的工作空间
- 标准化（Seiketsu)：让所有界面保持一致，使用户维持心智模型，并轻松地学习和适应新界面
- 持续（Shitsuke)：不断改进

实时工作设计和检查：

- 实时设计：把设计工作精确地放在人们决定增加功能之后，和用代码实现之前
- 实时检查：在完成某一方案后，发布之前检查、简化、精练和改进

## 改良比创新重要

创新的成本很高，通常持续的小的改进更能提升软件的用户体验。

让软件友好的一些方法：

- 不要打断用户的操作流程
- 让用户快速完成
- 不要强迫用户理解与操作无关的事情


参考
============

版权声明：本文为博主原创文章，转载请注明出处。 [旭日酒馆](https://xueyp.github.io/)
